gtype GList;
gtype GHashTable;

package demo {

    genum AnimalCatg {

        code BIRD;
        code MAMMAL;

    }

    ginterface FlyingAnimal {

        method fly {}

    }

}

    gobject Bird {

        super Animal;
        implements demo::FlyingAnimal;

        property weight {
            type: double;
            access: initial-write;
        }

        constructor {

            init_properties {
                category: AnimalCatg.BIRD;
            }

            parameter weight {
                type: double;
                bind_property: weight;
            }

        }
        
        method talk {
            visibility: public;
            inheritance: abstract;
            parameter message { type: string; modifiers: const; }
            parameter language_code { type: unsigned integer; }
        }

        signal started {
            parameter dest { type: string; }
            parameter user_data { type: pointer; }
        }

        signal direction-changed {
            parameter old { type: double; }
            parameter new { type: double; }
            parameter user_data { type: pointer; }
            parameter arg1 { type: ref(GList); }
        }
        
        override eat;

        method breed { visibility: public; }

        method do_something_protected { visibility: protected; }

        attribute num_instances { type: integer; scope: static; }
        attribute name { type: string; visibility: public; }
        attribute weight { type: double; }
        attribute color { type: unsigned integer; visibility: protected; }

    }

    gobject Animal {

        abstract;

        property category {
            type: enumeration;
            gtype: gtypename( AnimalCatg );
            access: initial-write;
        }

        method eat { inheritance: abstract; }

    }

